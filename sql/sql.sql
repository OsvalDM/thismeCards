CREATE TABLE USERCARD (
    id INT AUTO_INCREMENT,
    email VARCHAR(500) NOT NULL,
    userName VARCHAR(100) NOT NULL,
    psw VARCHAR(200) NOT NULL,
    state VARCHAR(100) NOT NULL DEFAULT "ACTIVE",
    admin BOOLEAN NOT NULL DEFAULT 0,
    PRIMARY KEY (id)
);

-- Base data card
CREATE TABLE CARD(
    id INT AUTO_INCREMENT,
    user INT NOT NULL,
    name VARCHAR(500) NOT NULL,
    lastFat VARCHAR(500) NOT NULL,
    lastMot VARCHAR(500) NOT NULL,
    imgProfile VARCHAR(500) NOT NULL,
    activationDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id, user),
    FOREIGN KEY(user) REFERENCES USERCARD(id)    
);

CREATE TABLE EMAIL(
    card INT NOT NULL,
    email VARCHAR(500) NOT NULL,
    PRIMARY KEY(card, email),
    FOREIGN KEY(card) REFERENCES CARD(id)
);

CREATE TABLE PHONE(
    card INT NOT NULL,
    phone VARCHAR(15) NOT NULL,
    PRIMARY KEY(card, phone),
    FOREIGN KEY(card) REFERENCES CARD(id)
);

CREATE TABLE SOCIAL(
    id INT AUTO_INCREMENT,
    user INT NOT NULL,
    name VARCHAR(100),
    brand VARCHAR(500),
    link VARCHAR(1000),
    PRIMARY KEY(id, user),
    FOREIGN KEY(user) REFERENCES USERCARD(id)
);

-- Administration

CREATE TABLE LOGS (
    id INT AUTO_INCREMENT,
    user INT NOT NULL,
    detail VARCHAR(500) NOT NULL,
    date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,    
    PRIMARY KEY (id, user),
    FOREIGN KEY (user) REFERENCES USERCARD(id)
);

CREATE TABLE PAYMENT (
    id INT AUTO_INCREMENT,
    user INT NOT NULL,
    detail VARCHAR(500) NOT NULL,
    mount INT NOT NULL,
    comprobant VARCHAR(500) NOT NULL,
    confirm BOOLEAN NOT NULL DEFAULT 0,
    date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,    
    userTarget INT NOT NULL,
    PRIMARY KEY(id, user),
    FOREIGN KEY(user) REFERENCES USERCARD(id),
    FOREIGN KEY(userTarget) REFERENCES USERCARD(id)
);

CREATE TABLE TOKEN (
    id INT AUTO_INCREMENT,
    user INT NOT NULL,
    content VARCHAR(12) NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(user) REFERENCES USERCARD(id)
);

-- Personalitation
CREATE TABLE STYLE (
    id INT AUTO_INCREMENT,
    user INT NOT NULL,
    color VARCHAR(7) NOT NULL DEFAULT "#F04E4E",
    background VARCHAR(500) NOT NULL DEFAULT "img/background.jpg",
    template INT NOT NULL DEFAULT 0,
    PRIMARY KEY(id, user),
    FOREIGN KEY(user) REFERENCES USERCARD(id)
);

-- Content
-- Especialization
CREATE TABLE COMPONENT(
    id INT AUTO_INCREMENT,
    user INT NOT NULL,
    orderCard INT NOT NULL,
    category VARCHAR(100) NOT NULL,
    state VARCHAR(100) NOT NULL DEFAULT "ACTIVE",
    PRIMARY KEY(id, user), 
    FOREIGN KEY(user) REFERENCES USERCARD(id)
);

-- Generalizations
CREATE TABLE ABOUTME(
    id INT NOT NULL,
    user INT NOT NULL,
    content VARCHAR(3000) NOT NULL,
    PRIMARY KEY(id, user),
    FOREIGN KEY(id) REFERENCES COMPONENT(id),
    FOREIGN KEY(user) REFERENCES COMPONENT(user)
);

CREATE TABLE BRIEFCASE(
    id INT NOT NULL,
    user INT NOT NULL,
    PRIMARY KEY(id, user),
    FOREIGN KEY(id) REFERENCES COMPONENT(id),
    FOREIGN KEY(user) REFERENCES COMPONENT(user)
);

CREATE TABLE BRIEFCASE_IMAGE(
    id INT NOT NULL,
    user INT NOT NULL,
    urlImg VARCHAR(500) NOT NULL,
    PRIMARY KEY(id, user, urlImg),
    FOREIGN KEY(id) REFERENCES BRIEFCASE(id),
    FOREIGN KEY(user) REFERENCES BRIEFCASE(user)
);

CREATE TABLE UBICATION(
    id INT NOT NULL,
    user INT NOT NULL,
    lat VARCHAR(100) NOT NULL,
    lon VARCHAR(100) NOT NULL,
    address VARCHAR(500) NOT NULL,
    tittle VARCHAR(100) NOT NULL,
    PRIMARY KEY(id, user),
    FOREIGN KEY(id) REFERENCES COMPONENT(id),
    FOREIGN KEY(user) REFERENCES COMPONENT(user)
);

CREATE TABLE COSTUMER(
    id INT NOT NULL,
    user INT NOT NULL,
    PRIMARY KEY(id, user),
    FOREIGN KEY(id) REFERENCES COMPONENT(id),
    FOREIGN KEY(user) REFERENCES COMPONENT(user)
);

CREATE TABLE COSTUMER_DATA(
    id INT AUTO_INCREMENT,
    costumer INT NOT NULL,
    name VARCHAR(500) NOT NULL,
    img VARCHAR(500) NOT NULL,
    PRIMARY KEY(id, costumer),
    FOREIGN KEY(costumer) REFERENCES COSTUMER(id)
);